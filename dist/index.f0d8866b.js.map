{"mappings":"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","sources":["src/modules/globals.js","src/modules/layoutExtractor.js","src/modules/navInteraction.js","src/modules/keyboardInteraction.js","src/main.js"],"sourcesContent":["// DOM ELEMENT VARIABLES\r\nconst DOM = {\r\n  layoutForm: document.querySelector(\"#layout-form\"),\r\n  layoutFormSubmit: document.querySelector(\"#layout-submit\"),\r\n  viewSwitcher: document.querySelector(\"#view-switcher\"),\r\n  layerNav: document.querySelector(\"#layer-nav\"),\r\n  keyboard: document.querySelector(\"#keyboard\"),\r\n};\r\n\r\n// GLOBAL VARIABLES\r\nconst Store = {\r\n  data: {},\r\n  layers: [],\r\n  layerStack: [],\r\n  getCurrLayer() {\r\n    return this.layerStack[this.layerStack.length - 1];\r\n  },\r\n  toLocalStorage(lData) {\r\n    localStorage.setItem(\"KBLayoutData\", JSON.stringify(lData));\r\n  },\r\n  fromLocalStorage() {\r\n    return JSON.parse(localStorage.getItem(\"KBLayoutData\"));\r\n  },\r\n  localStorageExists() {\r\n    return this.fromLocalStorage() !== null;\r\n  },\r\n};\r\n\r\nexport { DOM, Store };\r\n","export const Extract = {\r\n  layoutData(src) {\r\n    const srcLayers = src.split(/(?<=')$/m);\r\n    let extracted = {};\r\n\r\n    for (i in srcLayers) {\r\n      // iterate over Layers\r\n      let name = extractLayerName(srcLayers[i]);\r\n      let rows = extractRows(srcLayers[i]);\r\n\r\n      let keys = rows.map((row, i) => {\r\n        //iterate over rows\r\n        if (i === 3) {\r\n          return extractKeys(row, 6);\r\n        } else {\r\n          return extractKeys(row);\r\n        }\r\n      });\r\n\r\n      extracted[name] = keys;\r\n    }\r\n\r\n    return extracted;\r\n  },\r\n  layerNames(src) {\r\n    return Object.keys(src).map((lName) => {\r\n      return lName;\r\n    });\r\n  },\r\n};\r\n\r\n// INTERNAL\r\nfunction extractLayerName(layer) {\r\n  return layer.match(/^\\w+$/m)[0];\r\n}\r\nfunction extractRows(layer) {\r\n  return layer.match(/^\\|[^\\-].+$/gm);\r\n}\r\nfunction extractKeys(row, twoUKeyAt) {\r\n  let rowCleaned = row.replace(/((?<=\\|)\\s\\|)|(^\\|)|(\\|$)/g, \"\");\r\n  let keys = rowCleaned.match(/.{1,8}/g);\r\n\r\n  let keysTwoUsMerged = [];\r\n  for (let i = 0; i < keys.length; i++) {\r\n    if (i == twoUKeyAt) {\r\n      keysTwoUsMerged.push(`${keys[i]}${keys[i + 1]}`);\r\n      i++;\r\n    } else {\r\n      keysTwoUsMerged.push(keys[i]);\r\n    }\r\n  }\r\n\r\n  let keysCleaned = keysTwoUsMerged.map((key) => {\r\n    return key.slice(0, -1);\r\n  });\r\n\r\n  return keysCleaned;\r\n}\r\n","import { Store, DOM } from \"./globals\";\r\nimport { Keys } from \"./keyboardInteraction\";\r\n\r\nconst Nav = {\r\n  addLayer(layerName) {\r\n    Store.layerStack.push(layerName);\r\n\r\n    let btnDOM = document.createElement(\"button\");\r\n    btnDOM.innerHTML = layerName;\r\n    btnDOM.classList.add(\"layer-btn\");\r\n    btnDOM.id = layerName;\r\n    btnDOM.onclick = () => {\r\n      this.clicked(layerName);\r\n    };\r\n\r\n    DOM.layerNav.appendChild(btnDOM);\r\n  },\r\n  removeLayer(layerName) {\r\n    Store.layerStack.pop();\r\n\r\n    let layerToRemove = document.getElementById(layerName);\r\n    layerToRemove.remove();\r\n  },\r\n  clicked(targetLayerName) {\r\n    if (targetLayerName == Store.getCurrLayer()) {\r\n      if (Store.layerStack.length > 1) {\r\n        const activeLayer = Store.getCurrLayer();\r\n        this.removeLayer(activeLayer);\r\n        const newActiveLayer = Store.getCurrLayer();\r\n        Keys.renderLayer(newActiveLayer);\r\n      }\r\n    } else {\r\n      let currL = Store.getCurrLayer();\r\n      while (currL !== targetLayerName) {\r\n        this.removeLayer(currL);\r\n        currL = Store.getCurrLayer();\r\n      }\r\n\r\n      Keys.renderLayer(targetLayerName);\r\n    }\r\n  },\r\n};\r\n\r\nexport { Nav };\r\n","import { Store } from \"./globals\";\r\nimport { Nav } from \"./navInteraction\";\r\n\r\nconst Keys = {\r\n  renderLayer(layerName) {\r\n    let layerData = Store.data[layerName];\r\n\r\n    this.forAll(layerName, (id, r, c) => {\r\n      let keyData = layerData[r][c];\r\n      const keyDOM = document.getElementById(id);\r\n\r\n      keyDOM.classList.remove(\"pressed\");\r\n\r\n      if (keyData.match(/^(\\s+)?_+(\\s+)?$/m)) {\r\n        Key.addFade(id);\r\n        Key.setContent(id, \"\");\r\n      } else {\r\n        Key.removeFade(id);\r\n        if (Key.getTargetLayer(keyData) === Store.getCurrLayer()) {\r\n          Key.setContent(id, Key.removeSquareBrackets(keyData));\r\n          keyDOM.classList.add(\"pressed\");\r\n        } else {\r\n          Key.setContent(id, keyData);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.updateInteractivity();\r\n  },\r\n  updateInteractivity() {\r\n    const currLayer = Store.getCurrLayer();\r\n\r\n    this.forAll(currLayer, (id) => {\r\n      let keyName = Key.getContent(id);\r\n\r\n      if (hasLayerInName(keyName)) {\r\n        Key.makeInteractive(id);\r\n      } else {\r\n        Key.removeInteractivity(id);\r\n      }\r\n    });\r\n  },\r\n  forAll(layerName, callback) {\r\n    l = Store.data[layerName];\r\n    for (row in l) {\r\n      for (col in l[row]) {\r\n        const id = `${row}x${col}`;\r\n        callback(id, row, col);\r\n      }\r\n    }\r\n  },\r\n};\r\n\r\nconst Key = {\r\n  setContent(id, val) {\r\n    let span = document.getElementById(id).getElementsByTagName(\"span\")[0];\r\n    span.innerHTML = val;\r\n  },\r\n  getContent(id) {\r\n    let span = document.getElementById(id).getElementsByTagName(\"span\")[0];\r\n    return span.innerHTML;\r\n  },\r\n  getTargetLayer(keyName) {\r\n    return Store.layers.find((l) => {\r\n      return keyName.includes(l);\r\n    });\r\n  },\r\n  makeInteractive(id) {\r\n    let keyDOM = document.getElementById(id);\r\n\r\n    keyDOM.onclick = () => {\r\n      this.clicked(id);\r\n    };\r\n    keyDOM.classList.add(\"clickeable\");\r\n  },\r\n  removeInteractivity(id) {\r\n    let keyDOM = document.getElementById(id);\r\n\r\n    keyDOM.onclick = null;\r\n    keyDOM.classList.remove(\"clickeable\");\r\n  },\r\n  clicked(id) {\r\n    const keyName = this.getContent(id);\r\n    let targetLayer = this.getTargetLayer(keyName);\r\n\r\n    if (targetLayer == Store.getCurrLayer()) {\r\n      const activeLayer = Store.getCurrLayer();\r\n      Nav.removeLayer(activeLayer);\r\n      const newActiveLayer = Store.getCurrLayer();\r\n      Keys.renderLayer(newActiveLayer);\r\n    } else {\r\n      Nav.addLayer(targetLayer);\r\n      Keys.renderLayer(targetLayer);\r\n    }\r\n  },\r\n  addFade(id) {\r\n    let keyDOM = document.getElementById(id);\r\n\r\n    keyDOM.classList.add(\"faded\");\r\n  },\r\n  removeFade(id) {\r\n    let keyDOM = document.getElementById(id);\r\n\r\n    keyDOM.classList.remove(\"faded\");\r\n  },\r\n  removeSquareBrackets(keyName) {\r\n    const newName = keyName.replaceAll(/(^\\[\\s?)|(\\s?\\]$)/gm, \"\");\r\n    return newName;\r\n  },\r\n};\r\n\r\nfunction hasLayerInName(keyName) {\r\n  return Store.layers.some((l) => {\r\n    return keyName.includes(l);\r\n  });\r\n}\r\n\r\nexport { Keys, Key };\r\n","import { DOM, Store } from \"./modules/globals\";\r\nimport { Extract } from \"./modules/layoutExtractor\";\r\nimport { Keys } from \"./modules/keyboardInteraction\";\r\nimport { Nav } from \"./modules/navInteraction\";\r\n\r\nfunction readLayout() {\r\n  const srcText = DOM.layoutForm.querySelector(\"textarea\").value;\r\n  Store.data = Extract.layoutData(srcText);\r\n  Store.layers = Extract.layerNames(Store.data);\r\n\r\n  switchToKeyboardView();\r\n  if (Store.layerStack.length == 0) {\r\n    Nav.addLayer(\"MAIN\");\r\n  }\r\n\r\n  Keys.renderLayer(\"MAIN\");\r\n\r\n  Store.toLocalStorage(Store.data);\r\n}\r\n\r\n// VIEWPORT FUNCTIONS\r\nfunction switchToFormView() {\r\n  console.log(\"going to form view...\");\r\n  DOM.keyboard.style.display = \"none\";\r\n  DOM.layerNav.style.display = \"none\";\r\n  DOM.viewSwitcher.style.display = \"none\";\r\n  DOM.layoutForm.style.removeProperty(\"display\");\r\n}\r\nfunction switchToKeyboardView() {\r\n  console.log(\"going to keyboard view...\");\r\n  DOM.layoutForm.style.display = \"none\";\r\n  DOM.keyboard.style.removeProperty(\"display\");\r\n  DOM.layerNav.style.removeProperty(\"display\");\r\n  DOM.viewSwitcher.style.removeProperty(\"display\");\r\n}\r\n\r\n// [[ SETUP ]]\r\nif (Store.localStorageExists()) {\r\n  Store.data = Store.fromLocalStorage();\r\n  Store.layers = Extract.layerNames(Store.data);\r\n  switchToKeyboardView();\r\n  Nav.addLayer(\"MAIN\");\r\n  Keys.renderLayer(\"MAIN\");\r\n} else {\r\n  switchToFormView();\r\n}\r\n\r\nDOM.layoutFormSubmit.addEventListener(\"click\", readLayout);\r\nDOM.viewSwitcher.addEventListener(\"click\", switchToFormView);\r\n"],"names":["$fbe2ea71b2996ad8$export$cb0933279c36a66b","layoutForm","document","querySelector","layoutFormSubmit","viewSwitcher","layerNav","keyboard","$fbe2ea71b2996ad8$export$390f32400eaf98c9","data","layers","layerStack","getCurrLayer","this","length","toLocalStorage","lData","localStorage","setItem","JSON","stringify","fromLocalStorage","parse","getItem","localStorageExists","$709290746f51e277$export$296daa4fd2384194","layoutData","src","srcLayers","split","extracted","i","name","match","keys","$709290746f51e277$var$extractRows","map","row","$709290746f51e277$var$extractKeys","layerNames","Object","lName","layer","twoUKeyAt","replace","keysTwoUsMerged","push","key","slice","$802791b37414f160$export$39140c7d8b0ba7b3","addLayer","layerName","btnDOM","createElement","innerHTML","classList","add","id","onclick","clicked","appendChild","removeLayer","pop","getElementById","remove","targetLayerName","activeLayer","newActiveLayer","$079aec7dded7a98e$export$4b0075e5ea5e1f26","renderLayer","currL","layerData","forAll","r","c","keyData","keyDOM","$079aec7dded7a98e$export$cd0f44441c3b7719","addFade","setContent","removeFade","getTargetLayer","removeSquareBrackets","updateInteractivity","currLayer","keyName","some","l","includes","$079aec7dded7a98e$var$hasLayerInName","getContent","removeInteractivity","makeInteractive","callback","col","val","getElementsByTagName","find","targetLayer","replaceAll","$aa459f0fea9822fe$var$switchToFormView","console","log","style","display","removeProperty","$aa459f0fea9822fe$var$switchToKeyboardView","addEventListener","srcText","value"],"version":3,"file":"index.f0d8866b.js.map"}